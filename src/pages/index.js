// import styles from '@/styles/Home.module.css'
import { useEffect, useState } from "react";

import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import Searchbar from "@/components/Searchbar";
import moment from "moment";
import useGeoCode from "@/utils/useGeoCode";
import useTime from "@/utils/useTime";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [weatherData, setWeatherData] = useState(null);
  const [searchInput, setSearchInput] = useState({
    city: "",
  });
  const [checkInput, setCheckInput] = useState(false);

  const { getGeoCodeFunc, foreCastWeather } = useGeoCode();
  const { getHourMin } = useTime();

  const handleSearchInputChange = (e) => {
    setSearchInput((prevState) => ({ ...prevState, city: e.target.value }));
  };
  const handleGeoCodeClick = async (cityString) => {
    const city = !searchInput.city ? { city: cityString } : searchInput;
    if (city.city) {
      const geoData = await getGeoCodeFunc(city);
      console.log("geoData: ", geoData);
      const foreCast = await foreCastWeather(geoData[0].lat, geoData[0].lon);
      console.log("foreCast: ", foreCast);
      setCheckInput(false);
      setWeatherData(foreCast.data);
      setSearchInput((prevState) => ({ ...prevState, city: "" }));
    } else {
      console.log("error :>> ");
      return setCheckInput(true);
    }
  };

  useEffect(() => {
    handleGeoCodeClick("berlin");
    //eslint-disable-next-line
  }, []);
  // console.log("searchInput: ", searchInput);
  console.log("weatherData", weatherData);
  return (
    <>
      <Head>
        <title>Weather Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {weatherData && (
        <main className="main-con grid gap-0 grid-cols-1 sm:grid-cols-2  auto-rows-auto pr-3 pl-3">
          <div className="today-con grid gap-1 grid-cols-1  gap-y-1 auto-rows-auto border-2">
            <div className="search-bar-con border-2">
              <Searchbar
                handleGeoCodeClick={handleGeoCodeClick}
                handleSearchInputChange={handleSearchInputChange}
                searchInput={searchInput}
              />
              {checkInput && (
                <p className="aler-box text-red-600 text-center font-bold">
                  Please check the given place name
                </p>
              )}
            </div>
            <div className="today-con-icon-box border-2">
              <p className="today-con-city-name-box text-center">
                {weatherData.timezone.substring(
                  weatherData.timezone.indexOf("/") + 1
                )}
              </p>

              <figure className="today-con-icon-box text-center">
                <Image
                  className="inline-block"
                  src={`https://openweathermap.org/img/wn/${weatherData.current.weather[0].icon}@2x.png`}
                  alt="current weather icon"
                  width="150"
                  height="150"
                  blurDataURL="blur"
                  priority="true"
                />
              </figure>
              <div className="today-con-temp-box text-5xl mt-2">
                {Math.round(weatherData.current.temp)} <sup>Â°C</sup>
              </div>
              <div className="today-con-current-time-box mt-2 mb-1">
                <span>{moment().format("dddd")}</span>{" "}
                <span className="text-slate-">
                  {getHourMin(weatherData.current.dt)}
                </span>
              </div>
            </div>
            <div className="border-2">
              <div>{searchInput.city}</div>
            </div>
          </div>

          <div className="details-con grid gap-1 grid-cols-1 grid-rows-4">
            <div className="border-2">B1</div>
            <div className="border-2">B2</div>
            <div className="border-2">B3</div>
            <div className="border-2">B4</div>
          </div>
        </main>
      )}
      {!weatherData && <div>Loading...</div>}
    </>
  );
}
