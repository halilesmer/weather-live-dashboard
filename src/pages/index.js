// import styles from '@/styles/Home.module.css'
import { useEffect, useState } from "react";

import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import Searchbar from "@/components/Searchbar";
import useGeoCode from "@/utils/useGeoCode";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const API_KEY = process.env.NEXT_PUBLIC_WEATHER_API_KEY;
  const [weatherData, setWeatherData] = useState(null);
  const [searchInput, setSearchInput] = useState({
    city: "",
  });
  
  const { getGeoCodeFunc, foreCastWeather } = useGeoCode();

  const handleSearchInputChange = (e) => {
    setSearchInput((prevState) => ({ ...prevState, city: e.target.value }));
  };

  const handleGeoCodeClick = async (cityString) => {
    const city = !searchInput.city ? { city: cityString } : searchInput;
    console.log("city: ", city);
    if (city) {
      const geoData = await getGeoCodeFunc(city);
      console.log("geoData: ", geoData);
      const foreCast = await foreCastWeather(geoData[0].lat, geoData[0].lon);
      setWeatherData(foreCast);
    } else {
      console.log("error :>> ");
    }
  };

  useEffect(() => {
    handleGeoCodeClick("berlin");
    //eslint-disable-next-line
  }, []);
  // console.log("searchInput: ", searchInput);
  console.log("weatherData", weatherData);
  return (
    <>
      <Head>
        <title>Weather Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {weatherData && (
        <main className="main-con grid gap-0 grid-cols-1 sm:grid-cols-2  auto-rows-auto">
          <div className="today-con grid gap-1 grid-cols-1  gap-y-1 auto-rows-auto border-2 border-orange-300">
            <div className="search-bar-con border-2">
              <Searchbar
                handleGeoCodeClick={handleGeoCodeClick}
                handleSearchInputChange={handleSearchInputChange}
                searchInput={searchInput}
              />
            </div>
            <div className="icon-con border-2">
              <div>Monday, 16:00</div>

              <Image
                className="inline-block"
                src={`https://openweathermap.org/img/wn/${weatherData.current.weather[0].icon}@2x.png`}
                alt="logo"
                width="90"
                height="90"
                blurDataURL="blur"
              />
              <div>{weatherData.current.temp} C</div>
              <div>Monday, 16:00</div>
            </div>
            <div className="border-2">
              <div>{searchInput.city}</div>
            </div>
          </div>

          <div className="details-con grid gap-1 grid-cols-1 grid-rows-4">
            <div className="border-2">B1</div>
            <div className="border-2">B2</div>
            <div className="border-2">B3</div>
            <div className="border-2">B4</div>
          </div>
        </main>
      )}
      {!weatherData && <div>Loading...</div>}
    </>
  );
}
